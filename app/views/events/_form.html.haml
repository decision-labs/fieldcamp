-content_for :head do
  = stylesheet_link_tag 'wmd/wmd.css'
  = javascript_include_tag 'vendor/wmd/wmd.combined.min'
  = stylesheet_link_tag 'flick/jquery-ui', 'jquery.multiselect', 'jquery.multiselect.filter'
  = javascript_include_tag  'jquery-ui.min', 'vendor/jquery.multiselect', 'vendor/jquery.multiselect.filter'

= nested_form_for [@project, @event], :html => { :multipart => true }  do |f|
  -if @event.errors.any?
    #error_explanation
      %h2= "#{pluralize(@event.errors.count, "error")} prohibited this event from being saved:"
      %ul
        - @event.errors.values.flatten.each do |msg|
          %li= msg
  .columns.wat-cf
    .column.left
      .field.group
        = f.label :title, :class => 'label'
        = f.text_field :title, :class => 'text_field'

      .field.group
        = f.label :description, :class => 'label'
        #description-button-bar
        = f.text_area :description, :class => 'text_area'

      .field.group
        %label.label Preview
        #event_description-preview.markdown_preview

      / address field geocoding
      .field.group
        = f.hidden_field :geom, :class => 'hidden_field', :value => @event.geom.try(:as_ewkt)

      .field.group
        .fieldWithErrors
          = f.label :address, :class => 'label'
          %span.geocoding_status.error
            =t(:address_unverified)
        = f.text_field :address, :class => 'text_field'
        %span.description E.g. Multan, Pakistan
        .actions-bar.wat-cf
          .actions
            %span.geocode_link=link_to t(:geocode_this_address), nil, :class => 'geocode_address button'
            / FIXME: OR needed
            =link_to t(:use_current_location), nil, :class => 'use_current_location button'

        / documents
        #new_documents_form
          =render :partial => "form_blank_documents", :locals => {:old_document_count => @event.documents.count}

        #document_list
          =render :partial => "form_documents", :locals => {:f => f}

        %br

        / images
        #new_images_form
          =render :partial => "form_blank_images", :locals => {:old_image_count => @event.images.count}
        #image_list
          =render :partial => "form_images", :locals => {:f => f}

    .column.right
      #map
        #map_canvas
      %br

      .field.group
        = f.label :sector_tokens, t('sectors'), :class => 'label'
        = select_tag 'event[sector_ids][]',
          options_from_collection_for_select(Sector.all, "id", "name", Proc.new{ |rec| @event.sectors.map(&:id).include?(rec.id) } ),
          :multiple=>true, :class => 'multiselect jqui-multiselect'

      .field.group
        = f.label :partner_tokens, t('partners'), :class => 'label'
        = select_tag 'event[partner_ids][]',
          options_from_collection_for_select(Partner.all, "id", "name", Proc.new{ |rec| @event.partners.map(&:id).include?(rec.id) } ),
          :multiple=>true, :class => 'multiselect jqui-multiselect'

      %h3{:class => 'label'}=t('distributions')
      / = render :partial => "distribution_form", :locals => {:f => f}
      = f.fields_for :distributions do |distribution_form|
        .field.group
          = distribution_form.label :item, :class => 'label'
          = distribution_form.text_field :item, :class => 'text_field'
          %span.description The relief or aid item being distributed during this activity
        .field.group
          = distribution_form.label :quantity_of_items, :class => 'label'
          = distribution_form.text_field :quantity_of_items, :class => 'text_field'
          %span.description The quantity of the items distributed during this activity
        .field.group
          = distribution_form.label :unit, :class => 'label'
          = distribution_form.text_field :unit, :class => 'text_field'
          %span.description The unit for the "quantity" of items distributed. Some standard "unit" (e.g. kg of rice or food, gallons of water, etc)
        .field.group
          = distribution_form.label :recipient, :class => 'label'
          = distribution_form.text_field :recipient, :class => 'text_field'
          %span.description The type of recipients e.g. families, individuals, organisations
        .field.group
          = distribution_form.label :number_of_recipients, :class => 'label'
          = distribution_form.text_field :number_of_recipients, :class => 'text_field'
        .group.navform.wat-cf
          = distribution_form.link_to_remove :confirm => t(:are_you_sure), :class => 'button right' do
            =image_tag("icons/14-minus.png")
            Remove this distribution

      .group.navform.wat-cf.distribution_fields
        = f.link_to_add :distributions, :class => 'button' do
          =image_tag("icons/13-plus.png")
          Add a distribution

      .group.navform.wat-cf
        = content_tag :button, :type => :submit, :class => 'button' do
          = image_tag "icons/tick.png"
          =t(:save)

:javascript
  $(document).ready(function () {
    setup_wmd({
        input: "event_description",
        button_bar: "description-button-bar",
        preview: "event_description-preview"
        // output: "copy_html"
    });

    $("#event_partner_ids_").multiselect({
       noneSelectedText: 'Select partner organisations',
       header: 'Select partners from list:'
    }).multiselectfilter({placeholder: "enter partner" });

    $("#event_sector_ids_").multiselect({
       noneSelectedText: 'Select sectors',
       header: 'Select sectors from list:'
    }).multiselectfilter({placeholder: "enter sector" });

  });

-content_for :sidebar do
  .block.notice
    %h4=t('project_information')
    %p
      %strong=t('title')
      =@project.title
    %p
      %strong=t('location')
      =@project.location.name
    %p
      %strong=t('sectors')
      =@project.sectors.map(&:name).join(', ')
    %p
      %strong=t('partners')
      =@project.partners.map(&:name).join(', ')
