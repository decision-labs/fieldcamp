-content_for :head do
  = stylesheet_link_tag 'wmd/wmd.css'
  = javascript_include_tag 'vendor/wmd/wmd.combined.min'
  = stylesheet_link_tag 'flick/jquery-ui', 'jquery.multiselect', 'jquery.multiselect.filter'
  = javascript_include_tag  'vendor/jquery-ui.min', 'vendor/jquery.multiselect', 'vendor/jquery.multiselect.filter'

= form_for [@project, @event], :html => { :multipart => true }  do |f|
  -if @event.errors.any?
    #error_explanation
      %h2= "#{pluralize(@event.errors.count, "error")} prohibited this event from being saved:"
      %ul
        - @event.errors.values.flatten.each do |msg|
          %li= msg
  .columns.wat-cf
    .column.left
      .field.group
        = f.label :title, :class => 'label'
        = f.text_field :title, :class => 'text_field'

      .field.group
        = f.label :description, :class => 'label'
        #description-button-bar
        = f.text_area :description, :class => 'text_area'
      .field.group
        %label.label Preview
        #event_description-preview.markdown_preview

      / address field geocoding
      .field.group
        = f.hidden_field :geom, :class => 'hidden_field', :value => @event.geom.try(:as_ewkt)
      .field.group
        .fieldWithErrors
          = f.label :address, :class => 'label'
          %span.geocoding_status.error
            =t(:address_unverified)
        = f.text_field :address, :class => 'text_field'
        %span.description E.g. Multan, Pakistan
        .actions-bar.wat-cf
          .actions
            %span.geocode_link=link_to t(:geocode_this_address), nil, :class => 'geocode_address button'
            / FIXME: OR needed
            =link_to t(:use_current_location), nil, :class => 'use_current_location button'

        / images
        #new_images_form
          =render :partial => "form_blank_images", :locals => {:old_image_count => @event.images.count}
        #image_list
          =render :partial => "form_images", :locals => {:f => f}

    .column.right
      #map
        #map_canvas
      %br
      .field.group
        = f.label :sector_tokens, t('sectors'), :class => 'label'
        = select_tag 'event[sector_ids][]',
          options_from_collection_for_select(Sector.all, "id", "name", Proc.new{ |rec| @event.sectors.map(&:id).include?(rec.id) } ),
          :multiple=>true, :class => 'multiselect jqui-multiselect'
      %br
      .field.group
        = f.label :partner_tokens, t('partners'), :class => 'label'
        = select_tag 'event[partner_ids][]',
          options_from_collection_for_select(Partner.all, "id", "name", Proc.new{ |rec| @event.partners.map(&:id).include?(rec.id) } ),
          :multiple=>true, :class => 'multiselect jqui-multiselect'

  .group.navform.wat-cf
    = content_tag :button, :type => :submit, :class => 'button' do
      = image_tag "icons/tick.png"
      =t(:save)

:javascript
  $(document).ready(function () {
    setup_wmd({
        input: "event_description",
        button_bar: "description-button-bar",
        preview: "event_description-preview"
        // output: "copy_html"
    });

    $("#event_partner_ids_").multiselect({
       noneSelectedText: 'Select partner organisations',
       header: 'Select partners from list:'
    }).multiselectfilter({placeholder: "enter partner" });

    $("#event_sector_ids_").multiselect({
       noneSelectedText: 'Select sectors',
       header: 'Select sectors from list:'
    }).multiselectfilter({placeholder: "enter sector" });

  });

-content_for :sidebar do
  .block.notice
    %h4=t('project_information')
    %p
      %strong=t('title')
      =@project.title
    %p
      %strong=t('location')
      =@project.location.name
    %p
      %strong=t('sectors')
      =@project.sectors.map(&:name).join(', ')
    %p
      %strong=t('partners')
      =@project.partners.map(&:name).join(', ')
