=content_for :head do
  =stylesheet_link_tag 'google'
  =javascript_include_tag 'http://maps.google.com/maps/api/js?sensor=false'

:javascript
  $(document).ready(function () {
    var lat, lon, elev = 0;
    var map = null;
    var marker = null;

    if(navigator.geolocation){
      function gpsSuccess (pos) {
        if( pos.coords ){
          lat = pos.coords.latitude;
          lon = pos.coords.longitude;
          if( pos.coords.altitude != null){
            elev = pos.coords.altitude;
          } else {
            elev = (getElevationForLatLon(lat,lon) || 0);
          }
        } else{
          lat = pos.latitude;
          lon = pos.longitude;
          if( pos.altitude != null){
            elev = pos.altitude;
          }else{
            elev = (getElevationForLatLon(lat,lon) || 0);
          }
        }

        event = new google.maps.LatLng(lat, lon);
        map.panTo(event);
        if(marker != null){ marker.setMap(null); }
        marker = new google.maps.Marker({
          map: map,
          //draggable:true,
          animation: google.maps.Animation.DROP,
          position: event
        });
        $('input#event_geom').val("POINT("+lon +" "+lat+" "+elev+")");
        // console.log("Location Found: lat="+lat + " lon="+lon );
      }
      function gpsFail () {
        console.log("No Geolocation API - use address field")
      }
      $('.use_current_location').bind('click', function () {
        navigator.geolocation.getCurrentPosition(gpsSuccess, gpsFail, {enableHighAccuracy:true, maximumAge: 300000});
        return false;
      })
    }  // geolocation api calls

    // TODO: Add event to listen on typing address: $('.geocode_address') and clear all locations

    $('.geocode_address').bind('click', function () {
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({ 'address': $('input#event_address').val()}, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          if(!(results[0].formatted_address == undefined)){
            // set the address field with the geocoded address
            $('input#event_address').val(results[0].formatted_address);
          }
          lon = results[0].geometry.location.lng()
          lat = results[0].geometry.location.lat()
          elev = (getElevationForLatLon(lat,lon) || 0);
          // set the hidden geom field to wkt_geometry string
          $('input#event_geom').val("POINT("+lon +" "+lat+" "+elev+")");
          // set address varified
          $('span.geocoding_status').html("Address verified");
          // center map to address and drop marker
          event = new google.maps.LatLng(lat, lon);
          map.panTo(event);
          if(marker != null){ marker.setMap(null); } // clear any old markers
          marker = new google.maps.Marker({
            map: map,
            //draggable:true,
            animation: google.maps.Animation.DROP,
            position: event
          });
        }else{
          ;
        }

      });
      return false;
    });

    var latlng = new google.maps.LatLng("#{@project.location.geom.envelope.center.y}", "#{@project.location.geom.envelope.center.x}");
    var mapOptions = {
      zoom: 8,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map($('#map_canvas')[0], mapOptions)

  })  // document read

%h1 New event

#map_canvas
%br
=link_to "Use Current Location", nil, :class => 'use_current_location'

= render 'form'

= link_to 'Back', project_events_path(@project)
