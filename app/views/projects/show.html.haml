- content_for :head do
  = stylesheet_link_tag 'map'
  = javascript_include_tag 'vendor/GeoJSON', 'json-helpers'
  :javascript
    var map;

    function ToggleFullScreen(controlDiv, map) {

      // Set CSS styles for the DIV containing the control
      // Setting padding to 5 px will offset the control
      // from the edge of the map
      controlDiv.style.padding = '5px';

      // Set CSS for the control border
      var controlUI = document.createElement('DIV');
      controlUI.style.backgroundColor = 'white';
      controlUI.style.borderStyle = 'solid';
      controlUI.style.borderWidth = '2px';
      controlUI.style.cursor = 'pointer';
      controlUI.style.textAlign = 'center';
      controlUI.title = 'Click to set the map to Home';
      controlDiv.appendChild(controlUI);

      // Set CSS for the control interior
      var controlText = document.createElement('DIV');
      controlText.style.fontFamily = 'Arial,sans-serif';
      controlText.style.fontSize = '12px';
      controlText.style.paddingLeft = '4px';
      controlText.style.paddingRight = '4px';
      controlText.innerHTML = 'Toggle Fullscreen';
      controlUI.appendChild(controlText);

      // Setup the click event listeners: simply set the map to Chicago
      google.maps.event.addDomListener(controlUI, 'click', function() {
        $('#map').css({height: $(window).height(), width: $(document).width()});
        $('#map_canvas').toggleClass("fullscreen");
        google.maps.event.trigger(map, 'resize');
      });
    }

    function initialize() {
      var pathname = window.location.pathname;
      var myLatlng = new google.maps.LatLng(30.375, 69.345);
      var myOptions = {
        zoom: 6,
        center: myLatlng,
        mapTypeId: google.maps.MapTypeId.TERRAIN
      }
      map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

      var fullScreenControlDiv = document.createElement('DIV');
      var fullScreenControl = new ToggleFullScreen(fullScreenControlDiv, map);

      fullScreenControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(fullScreenControlDiv);

      $.getJSON(pathname+'.json', function(geojson) {
        province = new GeoJSON(geojson, null);
        province.setMap(map);
      });

      $.getJSON(pathname+'/events.json', function(geojson) {
        $.each(geojson.features, function(i, feature) {
          var event_marker = new GeoJSON(feature.geometry, null);
          event_marker.setMap(map);
          var content_string = renderJSON(feature.properties);
          var info_window = new google.maps.InfoWindow({content: content_string});
          google.maps.event.addListener(event_marker, 'click', function() {
            info_window.open(map, event_marker);
          });
        })
      });
    }

    function loadScript() {
      var script = document.createElement("script");
      script.type = "text/javascript";
      script.src = "http://maps.google.com/maps/api/js?sensor=false&callback=initialize";
      document.body.appendChild(script);
    }

    window.onload = loadScript;

    // ==================== Handle WebSocket messages ====================
    $(document).ready(function() {

      ws.onmessage = function(e) {
        feature = JSON.parse(e.data);
        if (feature.properties.project_id == "#{@project.id}") {
          console.log(feature);
          marker_opts = { animation: google.maps.Animation.DROP }
          var event_marker = new GeoJSON(feature.geometry, marker_opts);
          event_marker.setMap(map);
          var content_string = renderJSON(feature.properties);
          var info_window = new google.maps.InfoWindow({content: content_string});
          google.maps.event.addListener(event_marker, 'click', function() {
            info_window.open(map, event_marker);
          });
        }
      }
    }); // document ready

#map
  #map_canvas

.project
  =project_title_links(@project)
  .project-location= @project.location.name
  .project-description= @project.description
  .project-time
    Start date:
    = @project.start_date
  .project-time
    End date:
    = @project.end_date

  .clear

  %p
    %span.new-event-link=link_to "New event", new_project_event_path(@project)

  %h2 Recent Events
  = render :partial => 'events/event', :collection => @project.events

= link_to raw('&larr; Back to Projects'), projects_path
