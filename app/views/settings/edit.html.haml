-content_for :head do
  =javascript_include_tag 'http://maps.google.com/maps/api/js?sensor=false'


- content_for :outer do
  = stylesheet_link_tag 'map'
  = javascript_include_tag 'vendor/GeoJSON', 'map-helpers', 'vendor/markerclusterer_packed'
  = render 'js/show-settings-map_js'

= render :partial => "shared/nav"


.block
  .content
    %h2.title= t(:edit_user_settings)
    .inner
      .form

        = form_for :settings, :url => settings_url, :html => { :method => :put } do |f|
          - if @settings.errors.any?
            #error_explanation
              %h2= "#{pluralize(@settings.errors.count, "error")} prohibited these settings from being saved"
              %ul
                - @settings.errors.full_messages.each do |msg|
                  %li= msg

          .columns.wat-cf
            .column.left
              .field.group
                = f.label :locations, :class => 'label'
                // TODO: New Design
                //= f.select :location_id, @locations.collect{ |l| ["... "*l.admin_level+"#{l.admin_level} : #{l.name}", l.id ]}, :class => 'select'
                //%input{:id => 'settingsSearch'}
                %input{:autosave => "bsn_srch", :placeholder => "Search...", :results => "5", :type => "search", :id => 'settingsSearch'}
                :javascript
                  var resultsOverlays = [];
                  function clearOverlays() {
                    console.log(resultsOverlays);
                    if (resultsOverlays) {
                      $.each(resultsOverlays, function(index, value) {
                        value.overlay.setMap(null);
                      });
                    }
                  }
                  function clearOverlay(id) {
                    console.log(resultsOverlays);
                    if (resultsOverlays) {
                      $.each(resultsOverlays, function(index, value) {
                        if (value.id == id) {
                          value.overlay.setMap(null);
                          value.overlay = null;
                          resultsOverlays.splice(index, 1);
                        }
                      });
                    }
                  }

                  $(document).ready(function () {$("#settingsSearch").tokenInput("/search/locations",
                  { onAdd: updateMap, tokenLimit: 2, minChars: 3, onResult: preprocess_results, onDelete: function(item){clearOverlay(item.id)} })});

                  function preprocess_results(results) {return results; };

                  function updateMap(item){
                    $.getJSON('/locations/'+item.id+'.json', function(geojson) {
                      // clearOverlays();
                      var l = new GeoJSON(geojson, { strokeColor: "#444", strokeWeight:1, strokeOpacity: 0.75 });
                      l.setMap(map);
                      resultsOverlays.push({"id": item.id, "overlay": l});
                      console.log(resultsOverlays);
                      var bounds = l.getBounds();
                      map.panToBounds(bounds);
                      map.fitBounds(bounds);
                    });
                    return false;
                  }

            .column.right
              #map
                #map_canvas      
              %br
              .group.navform.wat-cf
                = content_tag :button, :type => :submit, :class => 'button' do
                  = image_tag "icons/tick.png"
                  =t(:save)
                %a.button{:href => settings_path}
                  = image_tag "icons/cross.png", :alt => "Cancel"
                  =t(:cancel)