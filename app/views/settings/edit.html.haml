-content_for :head do
  =javascript_include_tag 'http://maps.google.com/maps/api/js?sensor=false'


- content_for :outer do
  = stylesheet_link_tag 'map'
  = javascript_include_tag 'vendor/GeoJSON', 'map-helpers', 'vendor/markerclusterer_packed'
  = render 'js/show-settings-map_js'

= render :partial => "shared/nav"


.block
  .content
    %h2.title= t(:edit_user_settings)
    .inner
      .form

        = form_for :settings, :url => settings_url, :html => { :method => :put } do |f|
          - if @settings.errors.any?
            #error_explanation
              %h2= "#{pluralize(@settings.errors.count, "error")} prohibited these settings from being saved"
              %ul
                - @settings.errors.full_messages.each do |msg|
                  %li= msg

          .columns.wat-cf
            .column.left
              .field.group
                = f.label t(:location), :class => 'label'
                %span.description Your region of interest: E.g. Multan, Pakistan
                = f.text_field :location_id,
                  "data-pre" => @pre_populate_location.to_json

              .actions-bar.wat-cf
                .actions
                  .group.navform.wat-cf
                    = content_tag :button, :type => :submit, :class => 'button' do
                      = image_tag "icons/tick.png"
                      =t(:save)
                    %a.button{:href => settings_path}
                      = image_tag "icons/cross.png", :alt => "Cancel"
                      =t(:cancel)


            .column.right
              #map
                #map_canvas

:javascript
  var resultsOverlays = [];
  function clearOverlays() {
    if (resultsOverlays) {
      $.each(resultsOverlays, function(index, value) {
        value.overlay.setMap(null);
      });
    }
  }

  function clearOverlay(id) {
    if (resultsOverlays) {
      $.each(resultsOverlays, function(index, value) {
        if (value.id == id) {
          value.overlay.setMap(null);
          value.overlay = null;
          resultsOverlays.splice(index, 1);
        }
      });
    }
  }

  function updateMap(item){
    $.getJSON('/locations/'+item.id+'.json', function(geojson) {
      var l = new GeoJSON(geojson, { strokeColor: "#444", strokeWeight:1, strokeOpacity: 0.75 });
      l.setMap(map);
      resultsOverlays.push({"id": item.id, "overlay": l});
      var bounds = l.getBounds();
      map.panToBounds(bounds);
      map.fitBounds(bounds);
    });
    return false;
  }

  $(document).ready(function () {
    $("#settings_location_id").tokenInput("/search/locations?change_settings=true",{
      onAdd: updateMap,
      tokenLimit: 1,
      minChars: 3,
      prePopulate: $('#settings_location_id').data('pre'),
      onDelete: function(item){clearOverlay(item.id)}
    });

    updateMap({
      "id":"#{@settings.location.id rescue 0}"
    });
  });
